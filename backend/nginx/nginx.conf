upstream django_app {
    server web:8000;
}

server {
    listen 80;

    # Add server_name for production domain(s)
    # server_name example.com www.example.com;

    # Redirect HTTP to HTTPS
    # location / {
    #     return 301 https://$host$request_uri;
    # }

    location / {
        proxy_pass http://django_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Serve static files directly
    location /static/ {
        alias /var/www/html/static/;
        expires 30d;
        access_log off;
        add_header Cache-Control "public";
    }

    # Serve media files directly
    location /media/ {
        alias /var/www/html/media/;
        expires 30d;
        access_log off;
        add_header Cache-Control "public";
    }

    # For handling large uploads
    client_max_body_size 20M;
}

# HTTPS server block - uncomment for production
# server {
#     listen 443 ssl;
#     server_name example.com www.example.com;
#
#     ssl_certificate /etc/nginx/certs/fullchain.pem;
#     ssl_certificate_key /etc/nginx/certs/privkey.pem;
#
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
#
#     location / {
#         proxy_pass http://django_app;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
#
#     location /static/ {
#         alias /var/www/html/static/;
#         expires 30d;
#         access_log off;
#         add_header Cache-Control "public";
#     }
#
#     location /media/ {
#         alias /var/www/html/media/;
#         expires 30d;
#         access_log off;
#         add_header Cache-Control "public";
#     }
#
#     client_max_body_size 20M;
# }
