version: '3.8'

services:
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-broadcast}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./app:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    env_file:
      - ./.env
    environment:
      - DEBUG=${DEBUG:-False}
      - DATABASE_URL=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-broadcast}
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "${DJANGO_PORT:-8000}:8000"
    depends_on:
      - db
      - redis
    networks:
      - backend-network
    restart: unless-stopped

  celery:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: celery -A config worker -l INFO
    volumes:
      - ./app:/app
    env_file:
      - ./.env
    environment:
      - DEBUG=${DEBUG:-False}
      - DATABASE_URL=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-broadcast}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - web
      - redis
      - db
    networks:
      - backend-network
    restart: unless-stopped

  celery-beat:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: celery -A config beat -l INFO
    volumes:
      - ./app:/app
    env_file:
      - ./.env
    environment:
      - DEBUG=${DEBUG:-False}
      - DATABASE_URL=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-broadcast}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - web
      - redis
      - db
    networks:
      - backend-network
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  backend-network:
    driver: bridge
